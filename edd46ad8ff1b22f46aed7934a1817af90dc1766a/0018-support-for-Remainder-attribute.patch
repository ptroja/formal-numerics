From 6c51f3ae2db9bc9d1409bbe8dfd7a6ea0a8ace92 Mon Sep 17 00:00:00 2001
From: Piotr Trojanek <piotr.trojanek@gmail.com>
Date: Sat, 14 Dec 2013 00:04:51 +0000
Subject: [PATCH 18/18] support for Remainder attribute

---
 gnat2why/spark/spark_definition.adb          |  1 +
 gnat2why/why/gnat2why-expr.adb               | 25 +++++++++++++++++++++++++
 gnat2why/why/why-gen-names.adb               |  1 +
 gnat2why/why/why-gen-names.ads               |  1 +
 share/spark/theories/_gnatprove_standard.mlw |  3 +++
 5 files changed, 31 insertions(+)

diff --git a/gnat2why/spark/spark_definition.adb b/gnat2why/spark/spark_definition.adb
index 2dd010e..e48cd8c 100644
--- a/gnat2why/spark/spark_definition.adb
+++ b/gnat2why/spark/spark_definition.adb
@@ -2516,6 +2516,7 @@ package body SPARK_Definition is
             Attribute_Pos        |
             Attribute_Pred       |
             Attribute_Range      |
+            Attribute_Remainder  |
             Attribute_Result     |
             Attribute_Rounding   |
             Attribute_Truncation |
diff --git a/gnat2why/why/gnat2why-expr.adb b/gnat2why/why/gnat2why-expr.adb
index 31a4707..35d63d5 100644
--- a/gnat2why/why/gnat2why-expr.adb
+++ b/gnat2why/why/gnat2why-expr.adb
@@ -3357,6 +3357,31 @@ package body Gnat2Why.Expr is
                Current_Type := Base;
             end;
 
+         when Attribute_Remainder =>
+            declare
+               Ada_Ty : constant Entity_Id := Etype (Expr);
+               Base : constant W_Base_Type_Id := Base_Why_Type (Ada_Ty);
+               Arg1 : constant W_Expr_Id :=
+                 Transform_Expr (First (Expressions (Expr)),
+                                 Base,
+                                 Domain,
+                                 Params);
+               Arg2 : constant W_Expr_Id :=
+                 Transform_Expr (Next (First (Expressions (Expr))),
+                                 Base,
+                                 Domain,
+                                 Params);
+               Attr_Name : constant Why_Name_Enum := WNE_Remainder;
+               Func : constant W_Identifier_Id := To_Ident (Attr_Name);
+            begin
+               T := New_VC_Call (Ada_Node => Expr,
+                                 Domain   => Domain,
+                                 Name     => Func,
+                                 Progs    => (1 => Arg1, 2 => Arg2),
+                                 Reason   => VC_Division_Check);
+               Current_Type := Base;
+            end;
+
          when others =>
             Ada.Text_IO.Put_Line ("[Transform_Attr] id ="
                                   & Attribute_Id'Image (Attr_Id));
diff --git a/gnat2why/why/why-gen-names.adb b/gnat2why/why/why-gen-names.adb
index 6fe6036..b086d61 100644
--- a/gnat2why/why/why-gen-names.adb
+++ b/gnat2why/why/why-gen-names.adb
@@ -530,6 +530,7 @@ package body Why.Gen.Names is
          when WNE_Real_Truncate => return "Floating.truncate";
          when WNE_Real_Max  => return "Floating.real_max";
          when WNE_Real_Min  => return "Floating.real_min";
+         when WNE_Remainder  => return "Floating.remainder";
          when WNE_Float_Round   => return "round_real";
          when WNE_Float_Round_Tmp => return "round_real_tmp";
          when WNE_Float_Round_Single => return "Floating.round_single";
diff --git a/gnat2why/why/why-gen-names.ads b/gnat2why/why/why-gen-names.ads
index f90c928..b2fc130 100644
--- a/gnat2why/why/why-gen-names.ads
+++ b/gnat2why/why/why-gen-names.ads
@@ -244,6 +244,7 @@ package Why.Gen.Names is
       WNE_Real_Truncate,
       WNE_Real_Max,
       WNE_Real_Min,
+      WNE_Remainder,
       WNE_Result,
       WNE_Result_Exc,
       WNE_Sandbox,
diff --git a/share/spark/theories/_gnatprove_standard.mlw b/share/spark/theories/_gnatprove_standard.mlw
index d87915d..822e29c 100644
--- a/share/spark/theories/_gnatprove_standard.mlw
+++ b/share/spark/theories/_gnatprove_standard.mlw
@@ -120,6 +120,9 @@ module Floating
     requires { y<>0.0 }
     ensures { result = div_real x y }
 
+  val remainder (x:real) (y:real) : real
+    requires { y <> 0.0 }
+
 end
 
 module Boolean
-- 
1.9.0

