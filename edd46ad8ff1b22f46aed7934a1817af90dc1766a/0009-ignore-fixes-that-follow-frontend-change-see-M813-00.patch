From d9cdde961e9ac831b439f83468adc97bebf73dbd Mon Sep 17 00:00:00 2001
From: Piotr Trojanek <piotr.trojanek@gmail.com>
Date: Fri, 1 Nov 2013 00:40:47 +0000
Subject: [PATCH 09/18] ignore fixes that follow frontend change (see M813-004)

---
 gnat2why/spark/spark_definition.adb | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/gnat2why/spark/spark_definition.adb b/gnat2why/spark/spark_definition.adb
index 92c37b9..71da7fd 100644
--- a/gnat2why/spark/spark_definition.adb
+++ b/gnat2why/spark/spark_definition.adb
@@ -35,7 +35,7 @@ with Einfo;                              use Einfo;
 with Errout;                             use Errout;
 with Namet;                              use Namet;
 with Nlists;                             use Nlists;
-with Opt;                                use Opt;
+with Opt;
 with Sem_Prag;
 with Sem_Util;                           use Sem_Util;
 with Sinfo;                              use Sinfo;
@@ -109,7 +109,7 @@ package body SPARK_Definition is
 
    function Applicable_SPARK_Pragma_Is
      (E       : Entity_Id;
-      Mode    : SPARK_Mode_Type;
+      Mode    : SPARK_Mode_Id;
       Is_Body : Boolean := False) return Boolean;
    --  Returns True if the applicable SPARK_Pragma for entity E has value Mode,
    --  whether it comes from a local or a global SPARK_Mode pragma.
@@ -136,16 +136,16 @@ package body SPARK_Definition is
 
    function Applicable_SPARK_Pragma_Is
      (E       : Entity_Id;
-      Mode    : SPARK_Mode_Type;
+      Mode    : SPARK_Mode_Id;
       Is_Body : Boolean := False) return Boolean
    is
       Prag : constant Node_Id := Get_Applicable_SPARK_Pragma (E, Is_Body);
 
    begin
       if Present (Prag) then
-         return Sem_Prag.Get_SPARK_Mode_From_Pragma (Prag) = Mode;
+         return Sem_Prag.Get_SPARK_Mode_Id (Prag) = Mode;
       else
-         return SPARK_Mode_Config = Mode;
+         return Opt.Global_SPARK_Mode = Mode;
       end if;
    end Applicable_SPARK_Pragma_Is;
 
@@ -957,7 +957,7 @@ package body SPARK_Definition is
       --  Raise an error if the violation is forbidden by the use of pragma
       --  SPARK_Mode with value On.
 
-      if Applicable_SPARK_Pragma_Is (E, On, Is_Body) then
+      if Applicable_SPARK_Pragma_Is (E, SPARK_On, Is_Body) then
          Error_Msg_F (Complete_Error_Msg (Msg, V), N);
       end if;
 
@@ -993,7 +993,7 @@ package body SPARK_Definition is
       --  Raise an error if the violation is forbidden by the use of pragma
       --  SPARK_Mode with value On.
 
-      if Applicable_SPARK_Pragma_Is (E, On, Is_Body) then
+      if Applicable_SPARK_Pragma_Is (E, SPARK_On, Is_Body) then
 
          if In_Standard_Scope (From)
            or else Spec_Violations (NIR_XXX).Contains (From)
@@ -1174,7 +1174,7 @@ package body SPARK_Definition is
                elsif NYI_Msg /= "" then
                   return NYI_Msg;
                elsif Applicable_SPARK_Pragma_Is
-                 (Id, Off, Is_Body => True)
+                 (Id, SPARK_Off, Is_Body => True)
                then
                   return "";
                else
@@ -3302,7 +3302,7 @@ package body SPARK_Definition is
       --  Why.
 
       if not Has_Body_Violations (E)
-        and then not Applicable_SPARK_Pragma_Is (E, Off, Is_Body => True)
+        and then not Applicable_SPARK_Pragma_Is (E, SPARK_Off, Is_Body => True)
       then
          Bodies_In_SPARK.Include (E);
 
-- 
1.9.0

